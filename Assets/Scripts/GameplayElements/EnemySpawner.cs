using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using Unity.VisualScripting;

public class EnemySpawner : MonoBehaviour
{
    public WaveController waveController;
    public List<GameObject> enemiesToSpawn;
    public List<GameObject> enemyTypes;

    public int direction;


    public void SetEnemyTypes(List<GameObject> newEnemyTypes)
    {
        enemyTypes = newEnemyTypes;
    }

    // Fill spawner with enemies generated by our wave controller
    public void FillSpawner(List<GameObject> enemies)
    {
        enemiesToSpawn = new List<GameObject>(enemies);
    }

    public void StartWave(int spawnDelay)
    {
        StartCoroutine(SpawnEnemies(spawnDelay));
    }

    public void EndWave()
    {
        StopAllCoroutines();
    }

    // Routine to spawn our enemies with a delay between spawns
    private IEnumerator SpawnEnemies(int spawnDelay)
    {
        while(true)
        {
            if(enemiesToSpawn.Count != 0)
            {
                GameObject newEnemy = Instantiate(enemiesToSpawn[0], transform.position, Quaternion.identity);
                newEnemy.GetComponent<Enemy>().parentSpawner = gameObject;
                newEnemy.GetComponent<Enemy>().StartMovement(direction);
                enemiesToSpawn.RemoveAt(0);
            }
            yield return new WaitForSeconds(spawnDelay);
        }
    }

    public void EnemyDied()
    {
        waveController.EnemyDied();
    }

    // Respawns an enemy if they were not killed by the player
    public void RespawnEnemy(int enemyIndex)
    {
        Debug.Log(enemyIndex);
        enemiesToSpawn.Add(enemyTypes[enemyIndex]);
    }

}
